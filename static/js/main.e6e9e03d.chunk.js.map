{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","fildOrder","setFildOrder","isReversed","setIsReversed","visiblGoods","goods","fild","revers","prepereGoods","sort","good1","good2","localeCompare","reverse","setOrder","className","type","cn","alphabet","onClick","length","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAwBKA,E,0EAhBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAMGD,K,WAAAA,E,gBAAAA,E,qBAAAA,M,KA+BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAeH,EAASI,SAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAqB,GAAzD,mBAAOI,EAAP,KAAmBC,EAAnB,KAWMC,EAtCR,SAAkBC,EAAeC,EAAYC,GAC3C,IAAMC,EAAY,YAAOH,GAqBzB,OAnBIC,GACFE,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,IAfe,SAgBb,OAAOI,EAAMJ,GAAQK,EAAML,GAE7B,IAjBiB,WAkBf,OAAOI,EAAME,cAAcD,GAE7B,QACE,OAAO,MAKXJ,GACFC,EAAaK,UAGRL,EAgBaM,CAASlB,EAAiBI,EAAWE,GAEzD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcL,EAASuB,WAErCC,QAAS,kBAAMlB,EAAaN,EAASuB,WALvC,iCAUA,wBACEF,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcL,EAASyB,SAErCD,QAAS,kBAAMlB,EAAaN,EAASyB,SALvC,4BAUA,wBACEJ,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAaf,IAEfiB,QAvCmB,WACzBhB,GAAc,SAAAkB,GAAI,OAAKA,MAiCnB,sBAUErB,GAAaE,IACb,wBACEc,KAAK,SACLD,UAAU,4BACVI,QA5Ce,WACvBhB,GAAc,GACdF,EAAaN,EAASI,UAuChB,sBAUJ,6BACGK,EAAYkB,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCnHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6e9e03d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { Good } from './types/Good';\nimport { Fild } from './types/Fild';\nimport { IsReversed } from './types/IsReversed';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_ALPHABET = 'alphabet';\n\nenum SortType {\n  default = '',\n  length = 'length',\n  alphabet = 'alphabet',\n}\n\nfunction setOrder(goods: Good[], fild: Fild, revers: IsReversed): Good[] {\n  const prepereGoods = [...goods];\n\n  if (fild) {\n    prepereGoods.sort((good1, good2) => {\n      switch (fild) {\n        case SORT_BY_LENGTH:\n          return good1[fild] - good2[fild];\n\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (revers) {\n    prepereGoods.reverse();\n  }\n\n  return prepereGoods;\n}\n\nexport const App: React.FC = () => {\n  const [fildOrder, setFildOrder] = useState<Fild>(SortType.default);\n  const [isReversed, setIsReversed] = useState<IsReversed>(false);\n\n  const handleReverseClick = () => {\n    setIsReversed(prev => !prev);\n  };\n\n  const handleResetClick = () => {\n    setIsReversed(false);\n    setFildOrder(SortType.default);\n  };\n\n  const visiblGoods = setOrder(goodsFromServer, fildOrder, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': fildOrder !== SortType.alphabet,\n          })}\n          onClick={() => setFildOrder(SortType.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': fildOrder !== SortType.length,\n          })}\n          onClick={() => setFildOrder(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {(fildOrder || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visiblGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}